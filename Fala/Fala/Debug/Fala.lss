
Fala.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000000f8  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  0000014c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  0000014c  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  0000017c  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000020  00000000  00000000  000001b8  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000002a7  00000000  00000000  000001d8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000000d3  00000000  00000000  0000047f  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000001cf  00000000  00000000  00000552  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000024  00000000  00000000  00000724  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000017e  00000000  00000000  00000748  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00000010  00000000  00000000  000008c6  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 36 00 	call	0x6c	; 0x6c <main>
  64:	0c 94 7a 00 	jmp	0xf4	; 0xf4 <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <main>:
#include <avr/io.h>
#include <util/delay.h>

int main(void)
{
	DDRB = 0xFF;
  6c:	8f ef       	ldi	r24, 0xFF	; 255
  6e:	87 bb       	out	0x17, r24	; 23
	PORTB |= (1<<PINB0); //Turns ON LED
  70:	c0 9a       	sbi	0x18, 0	; 24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  72:	8f e3       	ldi	r24, 0x3F	; 63
  74:	9c e9       	ldi	r25, 0x9C	; 156
  76:	01 97       	sbiw	r24, 0x01	; 1
  78:	f1 f7       	brne	.-4      	; 0x76 <main+0xa>
  7a:	00 c0       	rjmp	.+0      	; 0x7c <main+0x10>
  7c:	00 00       	nop
    while (1) // infinite loop
    {
		_delay_ms(TICK);
		PORTB |= (1<<PINB1); //Turns ON LED
  7e:	c1 9a       	sbi	0x18, 1	; 24
		PORTB &= ~(1<<PINB0); //Turns OFF LED
  80:	c0 98       	cbi	0x18, 0	; 24
  82:	8f e3       	ldi	r24, 0x3F	; 63
  84:	9c e9       	ldi	r25, 0x9C	; 156
  86:	01 97       	sbiw	r24, 0x01	; 1
  88:	f1 f7       	brne	.-4      	; 0x86 <main+0x1a>
  8a:	00 c0       	rjmp	.+0      	; 0x8c <main+0x20>
  8c:	00 00       	nop
		
		_delay_ms(TICK);
		PORTB |= (1<<PINB2); //Turns ON LED
  8e:	c2 9a       	sbi	0x18, 2	; 24
		PORTB &= ~(1<<PINB1); //Turns OFF LED
  90:	c1 98       	cbi	0x18, 1	; 24
  92:	8f e3       	ldi	r24, 0x3F	; 63
  94:	9c e9       	ldi	r25, 0x9C	; 156
  96:	01 97       	sbiw	r24, 0x01	; 1
  98:	f1 f7       	brne	.-4      	; 0x96 <main+0x2a>
  9a:	00 c0       	rjmp	.+0      	; 0x9c <main+0x30>
  9c:	00 00       	nop
		
		_delay_ms(TICK);
		PORTB |= (1<<PINB3); //Turns ON LED
  9e:	c3 9a       	sbi	0x18, 3	; 24
		PORTB &= ~(1<<PINB2); //Turns OFF LED
  a0:	c2 98       	cbi	0x18, 2	; 24
  a2:	8f e3       	ldi	r24, 0x3F	; 63
  a4:	9c e9       	ldi	r25, 0x9C	; 156
  a6:	01 97       	sbiw	r24, 0x01	; 1
  a8:	f1 f7       	brne	.-4      	; 0xa6 <main+0x3a>
  aa:	00 c0       	rjmp	.+0      	; 0xac <main+0x40>
  ac:	00 00       	nop

		_delay_ms(TICK);
		PORTB |= (1<<PINB4); //Turns ON LED
  ae:	c4 9a       	sbi	0x18, 4	; 24
		PORTB &= ~(1<<PINB3); //Turns OFF LED
  b0:	c3 98       	cbi	0x18, 3	; 24
  b2:	8f e3       	ldi	r24, 0x3F	; 63
  b4:	9c e9       	ldi	r25, 0x9C	; 156
  b6:	01 97       	sbiw	r24, 0x01	; 1
  b8:	f1 f7       	brne	.-4      	; 0xb6 <main+0x4a>
  ba:	00 c0       	rjmp	.+0      	; 0xbc <main+0x50>
  bc:	00 00       	nop
		
		_delay_ms(TICK);
		PORTB |= (1<<PINB5); //Turns ON LED
  be:	c5 9a       	sbi	0x18, 5	; 24
		PORTB &= ~(1<<PINB4); //Turns OFF LED
  c0:	c4 98       	cbi	0x18, 4	; 24
  c2:	8f e3       	ldi	r24, 0x3F	; 63
  c4:	9c e9       	ldi	r25, 0x9C	; 156
  c6:	01 97       	sbiw	r24, 0x01	; 1
  c8:	f1 f7       	brne	.-4      	; 0xc6 <main+0x5a>
  ca:	00 c0       	rjmp	.+0      	; 0xcc <main+0x60>
  cc:	00 00       	nop

		_delay_ms(TICK);
		PORTB |= (1<<PINB6); //Turns ON LED
  ce:	c6 9a       	sbi	0x18, 6	; 24
		PORTB &= ~(1<<PINB5); //Turns OFF LED
  d0:	c5 98       	cbi	0x18, 5	; 24
  d2:	8f e3       	ldi	r24, 0x3F	; 63
  d4:	9c e9       	ldi	r25, 0x9C	; 156
  d6:	01 97       	sbiw	r24, 0x01	; 1
  d8:	f1 f7       	brne	.-4      	; 0xd6 <main+0x6a>
  da:	00 c0       	rjmp	.+0      	; 0xdc <main+0x70>
  dc:	00 00       	nop

		_delay_ms(TICK);
		PORTB |= (1<<PINB7); //Turns ON LED
  de:	c7 9a       	sbi	0x18, 7	; 24
		PORTB &= ~(1<<PINB6); //Turns OFF LED
  e0:	c6 98       	cbi	0x18, 6	; 24
  e2:	8f e3       	ldi	r24, 0x3F	; 63
  e4:	9c e9       	ldi	r25, 0x9C	; 156
  e6:	01 97       	sbiw	r24, 0x01	; 1
  e8:	f1 f7       	brne	.-4      	; 0xe6 <main+0x7a>
  ea:	00 c0       	rjmp	.+0      	; 0xec <main+0x80>
  ec:	00 00       	nop
		
		_delay_ms(TICK);
		PORTB |= (1<<PINB0); //Turns ON LED
  ee:	c0 9a       	sbi	0x18, 0	; 24
		PORTB &= ~(1<<PINB7); //Turns OFF LED
  f0:	c7 98       	cbi	0x18, 7	; 24
    }
  f2:	bf cf       	rjmp	.-130    	; 0x72 <main+0x6>

000000f4 <_exit>:
  f4:	f8 94       	cli

000000f6 <__stop_program>:
  f6:	ff cf       	rjmp	.-2      	; 0xf6 <__stop_program>
